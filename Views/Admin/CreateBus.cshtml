@*@model Busticket.Models.Bus

    @{
        ViewBag.Title = "Create Bus";
        Layout = "~/Views/Shared/AdminView.cshtml";
    }

    <h2>Create</h2>


    @using (Html.BeginForm("CreateBus","Admin",FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.vendorid)
        <div class="form-horizontal">
            <h4>Bus</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.BusNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BusNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BusNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.seats, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.seats, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.seats, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.vendorid, "vendorid", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.vendorid, (SelectList)ViewBag.id, "Select Vendor", new { @class = "form-control", onchange = "displayVendorName()" })
                    @Html.ValidationMessageFor(model => model.vendorid, "", new { @class = "text-danger" })
                </div>
            </div>
*@
@*<div class="form-group">
                @Html.LabelFor(model => model.driver, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.driver, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.driver, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Origin, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Origin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Destination, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDay, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDay, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDay, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDay, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDay, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndDay, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "VendorBusses")
    </div>*@


@*@model Busticket.Models.Bus

    @{
        ViewBag.Title = "Create Bus";
        Layout = "~/Views/Shared/AdminView.cshtml";
    }

    <div class="container mt-5">
        <div class="card mx-auto" style="max-width: 500px;">
            <div class="card-body">
                <h2 class="card-title text-center">Create New Bus</h2>
                @using (Html.BeginForm("CreateBus", "Admin", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(m => m.vendorid)

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusNo, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.BusNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BusNo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.seats, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.seats, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.seats, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.driver, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.driver, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.driver, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Origin, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Origin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Destination, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDay, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.StartDay, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartDay, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EndDay, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EndDay, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndDay, "", new { @class = "text-danger" })
                    </div>

                    <div class="text-center">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="mt-4 text-center">
        @Html.ActionLink("Back to List", "VendorBusses", null, new { @class = "btn btn-secondary" })
    </div>*@



@model Busticket.Models.Bus

@{
    ViewBag.Title = "Create Bus";
    Layout = "~/Views/Shared/AdminView.cshtml";
}


<div class="container mt-5">
    <div class="card mx-auto" style="max-width: 500px;">
        <div class="card-body">
            <h2 class="card-title text-center">Create New Bus</h2>
            @using (Html.BeginForm("CreateBus", "Admin", FormMethod.Post, new { @class = "form-horizontal", id = "createBusForm" }))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(m => m.vendorid)

                <div class="form-group">
                    @Html.LabelFor(model => model.BusNo, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.BusNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BusNo, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.seats, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.seats, new { htmlAttributes = new { @class = "form-control", type = "number", min = "1" } })
                    @Html.ValidationMessageFor(model => model.seats, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.driver, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.driver, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.driver, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Origin, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Origin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Destination, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDay, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.StartDay, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.StartDay, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDay, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.EndDay, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.EndDay, "", new { @class = "text-danger" })
                </div>

                <div class="text-center">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            }
        </div>
    </div>
</div>

<div class="mt-4 text-center">
    @Html.ActionLink("Back to List", "VendorBusses",new {id = Model.vendorid})
</div>

@section Scripts {
    <script>
        // Custom validation to ensure arrival time is greater than departure time
        $(document).ready(function () {
            

            // Custom validation to ensure seats are not 0
            $('form').submit(function () {
                var seats = parseInt($('#seats').val());

                if (seats === 0) {
                    alert('Seats cannot be 0.');
                    return false;
                }
            });
        });
    </script>
}





